import{a as D}from"./chunk-KSEUDHSD.mjs";import"./chunk-3HWDMON2.mjs";import"./chunk-2I7XES37.mjs";import"./chunk-LNTMWDPX.mjs";import"./chunk-WSJANNVG.mjs";import{a as h}from"./chunk-FUA3A67U.mjs";import k from"dayjs";import{v4 as S}from"uuid";import u from"fs";import f from"path";import O from"dayjs/plugin/customParseFormat";k.extend(O);function N(e,n){try{let a=e.filename.slice(0,-4),t=a+".json",c=u.readFileSync(f.join(e.mainFolder,e.filename),"utf-8");if(!c)return n(null,"empty log");let o;if(e.meterData)o=e.meterData;else if(e.meterDataPath&&e.dbPath)o=new(h(e.meterDataPath)).MeterData,o.loadDbs(e.dbPath);else return n(null,"no meter-data");let s=new D(o,!1);e.splitOnPhaseTransition===!0&&(s.splitOnPhaseTransition=!0);let T=c.split(`
`).filter(r=>r!=null&&r!="");for(let r of T)s.parseLogLine(r);s.splitEncounter();let d=s.encounters;if(d.length>0){let r={encounters:[]};for(let i of d){let g=i.lastCombatPacket-i.fightStartedOn;if(g<=1e3)continue;let m={name:"",damageTaken:0,isPlayer:!1};i.entities.forEach(l=>{l.damageTaken>m.damageTaken&&(m={name:l.name,damageTaken:l.damageTaken,isPlayer:l.isPlayer})});let y={duration:g,mostDamageTakenEntity:m},p=S(),P=`${a}_${p}_encounter.json`;r.encounters.push({encounterId:p,encounterFile:P,...y}),u.writeFileSync(f.join(e.parsedLogFolder,P),JSON.stringify({...i,...y},F))}return u.writeFileSync(f.join(e.parsedLogFolder,t),JSON.stringify(r)),n(null,"log parsed")}return n(null,"no encounters found")}catch(a){return n(a,"log parser error")}function F(a,t){return t instanceof Map?{dataType:"Map",value:Array.from(t.entries())}:t instanceof Set?{dataType:"Set",value:Array.from(t.values())}:t}}export{N as fileParserWorker};
